name: CI/CD for React App

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install

      - name: Build React app
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: react-build
          path: build/

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: react-build
          path: build/

      - name: Build Docker image
        run: |
          # Create Dockerfile dynamically if not present
          echo 'FROM nginx:alpine' > Dockerfile
          echo 'COPY build /usr/share/nginx/html' >> Dockerfile

          # Build the Docker image
          docker build -t 816069145944.dkr.ecr.us-east-1.amazonaws.com/react-app:${GITHUB_SHA} .

      - name: Install and configure AWS CLI
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip -q awscliv2.zip
          sudo ./aws/install --update
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set default.region us-east-1

      - name: Login to ECR
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 816069145944.dkr.ecr.us-east-1.amazonaws.com

      - name: Tag and push Docker image
        run: |
          docker tag 816069145944.dkr.ecr.us-east-1.amazonaws.com/ecr-dev-devops-kms:latest 816069145944.dkr.ecr.us-east-1.amazonaws.com/ecr-dev-devops-kms:${GITHUB_SHA}
          docker push 816069145944.dkr.ecr.us-east-1.amazonaws.com/ecr-dev-devops-kms:${GITHUB_SHA}

      - name: Deploy to EKS
        run: |
          aws eks update-kubeconfig --region us-east-1 --name dev-demo
          mkdir -p k8s
          export ECR_REPOSITORY_URL="816069145944.dkr.ecr.us-east-1.amazonaws.com/ecr-dev-devops-kms:${GITHUB_SHA}"
          envsubst < k8s-deployment.yaml > k8s/k8s-deployment.yaml
          echo "resources:" > k8s/kustomization.yaml
          echo "- k8s-deployment.yaml" >> k8s/kustomization.yaml
          kubectl kustomize k8s | kubectl apply -f - --force
